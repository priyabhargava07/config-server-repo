# this is set the port if we set is as 0 then it will take the random ports
server.port=8882
# these are properties for the mysql database if we dont metion the createDatabaseIfNotExist then it will not create the database for us
spring.datasource.url = jdbc:mysql://localhost:3306/Employee?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root1234
# to see all the sql query  the application is being used
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
# these are the property for the eureka client
eureka.client.fetch-registry: true
eureka.client.register-with-eureka: true
eureka.client.service-url.defaultZone: http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${random.value}

# this is for rabbit property
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest

management.endpoints.web.exposure.include=*
info.app.name=employee-service
info.app.description= employee service is running 
info.app.version=1.0.0
management.info.env.enabled=true

#this is for zipkin
spring.zipkin.base-url=http://127.0.0.1:9411/
spring.sleuth.sampler.probability=1.0
#actuator endpoints for circuit breaker
management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=always
#management.endpoints.web.exposure.include=health

#circuit breaker properties if are microservices is down in how much time the default method should work these properties we need to metion
resilience4j.circuitbreaker.instances.empServiceBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.empServiceBreaker.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.empServiceBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.empServiceBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.empServiceBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.empServiceBreaker.waitDurationInOpenState=6s
resilience4j.circuitbreaker.instances.empServiceBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.empServiceBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.empServiceBreaker.slidingWindowType=COUNT_BASED

#retry configuration  after how many times(retries) then the default method will work
#resilience4j.retry.instances.empServiceBreaker.registerHealthIndicator=true
#resilience4j.retry.instances.empServiceBreaker.maxRetryAttemot=5
#resilience4j.retry.instances.empServiceBreaker.waitDuration=1s

